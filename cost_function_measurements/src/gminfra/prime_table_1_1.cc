#include "prime_table_1_1.hh"

// === primes(265,1.1,1.18) ===
const uint64_vt gPrimeTable_1_1 = {
              2,
              3,
              5,
              7,
             11,
             13,
             17,
             19,
             23,
             29,
             31,
             37,
             41,
             43,
             47,
             53,
             59,
             61,
             67,
             71,
             73,
             79,
             83,
             89,
             97,
            107,
            127,
            139,
            151,
            167,
            191,
            211,
            233,
            257,
            281,
            311,
            347,
            383,
            421,
            463,
            509,
            563,
            619,
            683,
            751,
            827,
            911,
           1009,
           1109,
           1223,
           1361,
           1499,
           1657,
           1823,
           2011,
           2213,
           2437,
           2683,
           2953,
           3251,
           3581,
           3943,
           4337,
           4783,
           5261,
           5791,
           6373,
           7013,
           7717,
           8501,
           9371,
          10313,
          11351,
          12487,
          13751,
          15131,
          16649,
          18313,
          20143,
          22157,
          24371,
          26813,
          29501,
          32467,
          35729,
          39301,
          43237,
          47563,
          52321,
          57557,
          63311,
          69653,
          76631,
          84299,
          92737,
         102013,
         112213,
         123433,
         135781,
         149371,
         164309,
         180749,
         198823,
         218711,
         240587,
         264659,
         291143,
         320267,
         352301,
         387551,
         426311,
         468953,
         515857,
         567449,
         624199,
         686639,
         755309,
         830839,
         913921,
        1005313,
        1105847,
        1216433,
        1338101,
        1471913,
        1619113,
        1781027,
        1959149,
        2155067,
        2370581,
        2607659,
        2868443,
        3155303,
        3470837,
        3817939,
        4199747,
        4619743,
        5081717,
        5589887,
        6148897,
        6763787,
        7440187,
        8184221,
        9002663,
        9902929,
       10893257,
       11982583,
       13180841,
       14498929,
       15948841,
       17543741,
       19298119,
       21227929,
       23350751,
       25685833,
       28254449,
       31079911,
       34187903,
       37606693,
       41367413,
       45504167,
       50054611,
       55060079,
       60566101,
       66622727,
       73285007,
       80613509,
       88674877,
       97542433,
      107296687,
      118026367,
      129829013,
      142811927,
      157093171,
      172802491,
      190082743,
      209091031,
      230000153,
      253000177,
      278300203,
      306130241,
      336743269,
      370417627,
      407459407,
      448205363,
      493025909,
      542328503,
      596561369,
      656217553,
      721839341,
      794023283,
      873425617,
      960768191,
     1056845039,
     1162529591,
     1278782563,
     1406660819,
     1547326951,
     1702059659,
     1872265649,
     2059492229,
     2265441457,
     2491985633,
     2741184209,
     3015302657,
     3316832927,
     3648516229,
     4013367857,
     4414704641,
     4856175119,
     5341792637,
     5875971917,
     6463569137,
     7109926051,
     7820918671,
     8603010541,
     9463311601,
    10409642783,
    11450607097,
    12595667827,
    13855234667,
    15240758149,
    16764833971,
    18441317431,
    20285449181,
    22313994133,
    24545393569,
    26999932943,
    29699926241,
    32669918887,
    35936910791,
    39530601871,
    43483662073,
    47832028289,
    52615231117,
    57876754231,
    63664429687,
    70030872689,
    77033959967,
    84737355973,
    93211091587,
   102532200773,
   112785420851,
   124063962949,
   136470359257,
   150117395191,
   165129134741,
   181642048253,
   199806253123,
   219786878449,
   241765566323,
   265942122961,
   292536335261,
   321789968837,
   353968965719,
   389365862323,
   428302448557,
   471132693419,
   518245962769,
   570070559089,
   627077614997,
   689785376507,
   758763914201,
   834640305623,
   918104336203,
  1009914769889
};

uint64_t
get_next_prime_1_1(const uint64_t n) {
  const auto& p = gPrimeTable_1_1;
  const uint  s = gPrimeTable_1_1.size();
  assert(p[s - 1] >= n);
  // std::lower_bound(begin, end, val) returns an iterator pointing to the first element *not less than* val, or end() if every element is less than val.
  return (*(std::lower_bound(p.begin(), p.end(), n)));
}
